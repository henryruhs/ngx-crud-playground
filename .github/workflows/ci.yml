name: ci

on: [ push, pull_request ]

jobs:
 lint:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
    uses: actions/checkout@v4
  - name: Set up Node 22
    uses: actions/setup-node@v4
    with:
     node-version: 22
  - run: npm install
  - run: npm run lint:script
  - run: npm run lint:style
 build:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
    uses: actions/checkout@v4
  - name: Set up Node 22
    uses: actions/setup-node@v4
    with:
     node-version: 22
  - run: npm install
  - run: npm run build:prod
  - name: Upload artifact
    uses: actions/upload-artifact@v4
    with:
     name: build
     path: build
 test:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
    uses: actions/checkout@v4
  - name: Set up Node 22
    uses: actions/setup-node@v4
    with:
     node-version: 22
  - run: npm install
  - run: npm run test
 e2e:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
    uses: actions/checkout@v4
  - name: Set up Node 22
    uses: actions/setup-node@v4
    with:
     node-version: 22
  - run: npm install
  - run: npm run start:local &
  - run: npm run wait-for-serve && npm run e2e:local
 deploy:
  needs: [ lint, build, test, e2e ]
  if: github.ref == 'refs/heads/master'
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
    uses: actions/checkout@v4
  - name: Download artifact
    uses: actions/download-artifact@v4
    with:
     name: build
     path: build
  - name: Deploy to Vercel
    uses: amondnet/vercel-action@v25
    with:
     github-token: ${{ secrets.GITHUB_TOKEN }}
     vercel-token: ${{ secrets.VERCEL_TOKEN }}
     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
     vercel-args: --confirm --prod
 verify:
  runs-on: ubuntu-latest
  needs: deploy
  if: github.ref == 'refs/heads/master'
  steps:
  - name: Checkout
    uses: actions/checkout@v4
  - name: Set up Node 22
    uses: actions/setup-node@v4
    with:
     node-version: 22
  - run: npm install
  - run: xvfb-run --auto-servernum npm run e2e:prod
